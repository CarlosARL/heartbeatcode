{"ast":null,"code":"import io from 'socket.io-client';\nimport { SOCKET_URL } from \"../utils/constants\";\nvar socket;\nexport var initSocket = function initSocket() {\n  socket = io(SOCKET_URL);\n  socket.on('connect', function () {\n    console.log('Connected to socket server');\n  });\n  socket.on('disconnect', function () {\n    console.log('Disconnected from socket server');\n  });\n  socket.on('data', function (data) {\n    console.log('Received data:', data);\n  });\n  return socket;\n};\nexport var getSocket = function getSocket() {\n  if (!socket) {\n    return initSocket();\n  }\n  return socket;\n};\nexport var subscribeToPatient = function subscribeToPatient(patientId, callback) {\n  if (!socket) initSocket();\n  socket.emit('subscribe', patientId);\n  socket.on(\"vitalSigns:\" + patientId, callback);\n};\nexport var unsubscribeFromPatient = function unsubscribeFromPatient(patientId) {\n  if (socket) {\n    socket.emit('unsubscribe', patientId);\n    socket.off(\"vitalSigns:\" + patientId);\n  }\n};","map":{"version":3,"names":["io","SOCKET_URL","socket","initSocket","on","console","log","data","getSocket","subscribeToPatient","patientId","callback","emit","unsubscribeFromPatient","off"],"sources":["C:/Users/carlos/Desktop/Heartbeat/heartbeatcode/src/services/socket.js"],"sourcesContent":["import io from 'socket.io-client';\r\nimport { SOCKET_URL } from '../utils/constants';\r\n\r\nlet socket;\r\n\r\nexport const initSocket = () => {\r\n  socket = io(SOCKET_URL);\r\n\r\n  socket.on('connect', () => {\r\n    console.log('Connected to socket server');\r\n  });\r\n\r\n  socket.on('disconnect', () => {\r\n    console.log('Disconnected from socket server');\r\n  });\r\n\r\n  socket.on('data', (data) => {\r\n    console.log('Received data:', data);\r\n    // Aqui você pode adicionar lógica para lidar com os dados recebidos\r\n  });\r\n\r\n  return socket;\r\n};\r\n\r\nexport const getSocket = () => {\r\n  if (!socket) {\r\n    return initSocket();\r\n  }\r\n  return socket;\r\n};\r\n\r\n\r\nexport const subscribeToPatient = (patientId, callback) => {\r\n  if (!socket) initSocket();\r\n  socket.emit('subscribe', patientId);\r\n  socket.on(`vitalSigns:${patientId}`, callback);\r\n};\r\n\r\nexport const unsubscribeFromPatient = (patientId) => {\r\n  if (socket) {\r\n    socket.emit('unsubscribe', patientId);\r\n    socket.off(`vitalSigns:${patientId}`);\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,UAAU;AAEnB,IAAIC,MAAM;AAEV,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAC9BD,MAAM,GAAGF,EAAE,CAACC,UAAU,CAAC;EAEvBC,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,YAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C,CAAC,CAAC;EAEFJ,MAAM,CAACE,EAAE,CAAC,YAAY,EAAE,YAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD,CAAC,CAAC;EAEFJ,MAAM,CAACE,EAAE,CAAC,MAAM,EAAE,UAACG,IAAI,EAAK;IAC1BF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,IAAI,CAAC;EAErC,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf,CAAC;AAED,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAC7B,IAAI,CAACN,MAAM,EAAE;IACX,OAAOC,UAAU,CAAC,CAAC;EACrB;EACA,OAAOD,MAAM;AACf,CAAC;AAGD,OAAO,IAAMO,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,SAAS,EAAEC,QAAQ,EAAK;EACzD,IAAI,CAACT,MAAM,EAAEC,UAAU,CAAC,CAAC;EACzBD,MAAM,CAACU,IAAI,CAAC,WAAW,EAAEF,SAAS,CAAC;EACnCR,MAAM,CAACE,EAAE,iBAAeM,SAAS,EAAIC,QAAQ,CAAC;AAChD,CAAC;AAED,OAAO,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIH,SAAS,EAAK;EACnD,IAAIR,MAAM,EAAE;IACVA,MAAM,CAACU,IAAI,CAAC,aAAa,EAAEF,SAAS,CAAC;IACrCR,MAAM,CAACY,GAAG,iBAAeJ,SAAW,CAAC;EACvC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}