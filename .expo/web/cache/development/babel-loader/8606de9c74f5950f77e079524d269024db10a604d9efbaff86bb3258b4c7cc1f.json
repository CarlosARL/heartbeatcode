{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport { API_BASE_URL, PATIENT_API_URL } from \"../utils/constants\";\nvar api = axios.create({\n  baseURL: API_BASE_URL\n});\nvar patientApi = axios.create({\n  baseURL: PATIENT_API_URL\n});\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* (nameOrEmail, password) {\n    var response = yield api.post('/login', {\n      name: nameOrEmail,\n      password: password\n    });\n    return response.data;\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var register = function () {\n  var _ref2 = _asyncToGenerator(function* (name, email, password, passwordConfirmation) {\n    var response = yield api.post('/signup', {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    });\n    return response.data;\n  });\n  return function register(_x3, _x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getUserName = function () {\n  var _ref3 = _asyncToGenerator(function* (email) {\n    var response = yield api.get(\"/name/\" + email);\n    return response.data;\n  });\n  return function getUserName(_x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getPatients = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    var response = yield patientApi.get('/patients');\n    return response.data;\n  });\n  return function getPatients() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getPatientDetails = function () {\n  var _ref5 = _asyncToGenerator(function* (patientId) {\n    var response = yield patientApi.get(\"/patients/\" + patientId);\n    return response.data;\n  });\n  return function getPatientDetails(_x8) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var addPatient = function () {\n  var _ref6 = _asyncToGenerator(function* (patientData) {\n    var response = yield patientApi.post('/patients', patientData);\n    return response.data;\n  });\n  return function addPatient(_x9) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var updatePatient = function () {\n  var _ref7 = _asyncToGenerator(function* (patientId, patientData) {\n    var response = yield patientApi.put(\"/patients/\" + patientId, patientData);\n    return response.data;\n  });\n  return function updatePatient(_x10, _x11) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var deletePatient = function () {\n  var _ref8 = _asyncToGenerator(function* (patientId) {\n    var response = yield patientApi.delete(\"/patients/\" + patientId);\n    return response.data;\n  });\n  return function deletePatient(_x12) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var getMedicalNotes = function () {\n  var _ref9 = _asyncToGenerator(function* (patientId) {\n    var response = yield api.get(\"/patients/\" + patientId + \"/notes\");\n    return response.data;\n  });\n  return function getMedicalNotes(_x13) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var addMedicalNote = function () {\n  var _ref10 = _asyncToGenerator(function* (patientId, noteContent) {\n    var response = yield api.post(\"/patients/\" + patientId + \"/notes\", {\n      content: noteContent\n    });\n    return response.data;\n  });\n  return function addMedicalNote(_x14, _x15) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport var setAlertThresholds = function () {\n  var _ref11 = _asyncToGenerator(function* (patientId, thresholds) {\n    var response = yield api.post(\"/patients/\" + patientId + \"/alert-thresholds\", thresholds);\n    return response.data;\n  });\n  return function setAlertThresholds(_x16, _x17) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","PATIENT_API_URL","api","create","baseURL","patientApi","login","_ref","_asyncToGenerator","nameOrEmail","password","response","post","name","data","_x","_x2","apply","arguments","register","_ref2","email","passwordConfirmation","_x3","_x4","_x5","_x6","getUserName","_ref3","get","_x7","getPatients","_ref4","getPatientDetails","_ref5","patientId","_x8","addPatient","_ref6","patientData","_x9","updatePatient","_ref7","put","_x10","_x11","deletePatient","_ref8","delete","_x12","getMedicalNotes","_ref9","_x13","addMedicalNote","_ref10","noteContent","content","_x14","_x15","setAlertThresholds","_ref11","thresholds","_x16","_x17"],"sources":["C:/Users/carlos/Desktop/Heartbeat/heartbeatcode/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_BASE_URL, PATIENT_API_URL } from '../utils/constants';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n});\r\n\r\nconst patientApi = axios.create({\r\n  baseURL: PATIENT_API_URL,\r\n});\r\n\r\nexport const login = async (nameOrEmail, password) => {\r\n  const response = await api.post('/login', { name: nameOrEmail, password });\r\n  return response.data;\r\n};\r\n\r\nexport const register = async (name, email, password, passwordConfirmation) => {\r\n  const response = await api.post('/signup', { name, email, password, passwordConfirmation });\r\n  return response.data;\r\n};\r\n\r\nexport const getUserName = async (email) => {\r\n  const response = await api.get(`/name/${email}`);\r\n  return response.data;\r\n};\r\n\r\n// As funções relacionadas a pacientes devem usar a patientApi\r\nexport const getPatients = async () => {\r\n  const response = await patientApi.get('/patients');\r\n  return response.data;\r\n};\r\n\r\nexport const getPatientDetails = async (patientId) => {\r\n  const response = await patientApi.get(`/patients/${patientId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const addPatient = async (patientData) => {\r\n  const response = await patientApi.post('/patients', patientData);\r\n  return response.data;\r\n};\r\n\r\nexport const updatePatient = async (patientId, patientData) => {\r\n  const response = await patientApi.put(`/patients/${patientId}`, patientData);\r\n  return response.data;\r\n};\r\n\r\nexport const deletePatient = async (patientId) => {\r\n  const response = await patientApi.delete(`/patients/${patientId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getMedicalNotes = async (patientId) => {\r\n  const response = await api.get(`/patients/${patientId}/notes`);\r\n  return response.data;\r\n};\r\n\r\nexport const addMedicalNote = async (patientId, noteContent) => {\r\n  const response = await api.post(`/patients/${patientId}/notes`, { content: noteContent });\r\n  return response.data;\r\n};\r\n\r\nexport const setAlertThresholds = async (patientId, thresholds) => {\r\n  const response = await api.post(`/patients/${patientId}/alert-thresholds`, thresholds);\r\n  return response.data;\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}