{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useAuth } from \"../hooks/useAuth\";\nimport { useTheme } from \"../hooks/useTheme\";\nimport { getPatients } from \"../services/api\";\nimport PatientCard from \"../components/PatientCard\";\nimport Button from \"../components/Button\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    patients = _useState2[0],\n    setPatients = _useState2[1];\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var navigation = useNavigation();\n  useEffect(function () {\n    fetchPatients();\n  }, []);\n  var fetchPatients = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield getPatients();\n        setPatients(data);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n        alert('Erro ao buscar pacientes');\n      }\n    });\n    return function fetchPatients() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsxs(Text, {\n      style: [styles.greeting, {\n        color: theme.colors.text\n      }],\n      children: [\"Ol\\xE1, \", (user == null ? void 0 : user.name) || 'Usuário', \"!\"]\n    }), _jsx(FlatList, {\n      data: patients,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(PatientCard, {\n          patient: item,\n          onPress: function onPress() {\n            return navigation.navigate('PatientDetails', {\n              patientId: item._id\n            });\n          }\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      ListEmptyComponent: _jsx(Text, {\n        style: [styles.emptyText, {\n          color: theme.colors.text\n        }],\n        children: \"Nenhum paciente encontrado\"\n      })\n    }), _jsx(Button, {\n      title: \"Adicionar Paciente\",\n      onPress: function onPress() {\n        return navigation.navigate('AddPatient');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  greeting: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginTop: 20\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","FlatList","TouchableOpacity","useNavigation","useAuth","useTheme","getPatients","PatientCard","Button","jsxs","_jsxs","jsx","_jsx","HomeScreen","_useState","_useState2","_slicedToArray","patients","setPatients","_useAuth","user","_useTheme","theme","navigation","fetchPatients","_ref","_asyncToGenerator","data","error","console","alert","apply","arguments","style","styles","container","backgroundColor","colors","background","children","greeting","color","text","name","renderItem","_ref2","item","patient","onPress","navigate","patientId","_id","keyExtractor","ListEmptyComponent","emptyText","title","create","flex","padding","fontSize","fontWeight","marginBottom","textAlign","marginTop"],"sources":["C:/Users/carlos/Desktop/Heartbeat/heartbeatcode/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport { getPatients } from '../services/api';\r\nimport PatientCard from '../components/PatientCard';\r\nimport Button from '../components/Button';\r\n\r\nconst HomeScreen = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const { user } = useAuth();\r\n  const { theme } = useTheme();\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const data = await getPatients();\r\n      setPatients(data);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n      alert('Erro ao buscar pacientes');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\r\n      <Text style={[styles.greeting, { color: theme.colors.text }]}>\r\n        Olá, {user?.name || 'Usuário'}!\r\n      </Text>\r\n      <FlatList\r\n        data={patients}\r\n        renderItem={({ item }) => (\r\n          <PatientCard\r\n            patient={item}\r\n            onPress={() => navigation.navigate('PatientDetails', { patientId: item._id })}\r\n          />\r\n        )}\r\n        keyExtractor={(item) => item._id}\r\n        ListEmptyComponent={\r\n          <Text style={[styles.emptyText, { color: theme.colors.text }]}>\r\n            Nenhum paciente encontrado\r\n          </Text>\r\n        }\r\n      />\r\n      <Button\r\n        title=\"Adicionar Paciente\"\r\n        onPress={() => navigation.navigate('AddPatient')}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  greeting: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}