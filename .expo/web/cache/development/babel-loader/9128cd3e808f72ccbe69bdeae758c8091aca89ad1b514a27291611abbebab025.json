{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useTheme } from \"../hooks/useTheme\";\nimport PatientCard from \"../components/PatientCard\";\nimport Button from \"../components/Button\";\nimport { getPatients } from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PatientListScreen = function PatientListScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    patients = _useState2[0],\n    setPatients = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredPatients = _useState4[0],\n    setFilteredPatients = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchQuery = _useState6[0],\n    setSearchQuery = _useState6[1];\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var navigation = useNavigation();\n  useEffect(function () {\n    fetchPatients();\n  }, []);\n  useEffect(function () {\n    filterPatients();\n  }, [searchQuery, patients]);\n  var fetchPatients = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield getPatients();\n        setPatients(data);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      }\n    });\n    return function fetchPatients() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var filterPatients = function filterPatients() {\n    var filtered = patients.filter(function (patient) {\n      return patient.name.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    setFilteredPatients(filtered);\n  };\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsx(TextInput, {\n      style: [styles.searchInput, {\n        backgroundColor: theme.colors.card,\n        color: theme.colors.text\n      }],\n      placeholder: \"Buscar paciente\",\n      placeholderTextColor: theme.colors.text,\n      value: searchQuery,\n      onChangeText: setSearchQuery\n    }), _jsx(FlatList, {\n      data: filteredPatients,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(PatientCard, {\n          patient: item,\n          onPress: function onPress() {\n            return navigation.navigate('PatientDetails', {\n              patientId: item.id\n            });\n          }\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    }), _jsx(Button, {\n      title: \"Adicionar novo paciente\",\n      onPress: function onPress() {\n        return navigation.navigate('AddPatient');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  searchInput: {\n    height: 40,\n    borderRadius: 20,\n    paddingHorizontal: 15,\n    marginBottom: 15\n  }\n});\nexport default PatientListScreen;","map":{"version":3,"names":["React","useState","useEffect","View","FlatList","StyleSheet","TextInput","useNavigation","useTheme","PatientCard","Button","getPatients","jsx","_jsx","jsxs","_jsxs","PatientListScreen","_useState","_useState2","_slicedToArray","patients","setPatients","_useState3","_useState4","filteredPatients","setFilteredPatients","_useState5","_useState6","searchQuery","setSearchQuery","_useTheme","theme","navigation","fetchPatients","filterPatients","_ref","_asyncToGenerator","data","error","console","apply","arguments","filtered","filter","patient","name","toLowerCase","includes","style","styles","container","backgroundColor","colors","background","children","searchInput","card","color","text","placeholder","placeholderTextColor","value","onChangeText","renderItem","_ref2","item","onPress","navigate","patientId","id","keyExtractor","toString","title","create","flex","padding","height","borderRadius","paddingHorizontal","marginBottom"],"sources":["C:/Users/carlos/Desktop/Heartbeat/heartbeatcode/src/screens/PatientListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, FlatList, StyleSheet, TextInput } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport PatientCard from '../components/PatientCard';\r\nimport Button from '../components/Button';\r\nimport { getPatients } from '../services/api';\r\n\r\nconst PatientListScreen = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [filteredPatients, setFilteredPatients] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const { theme } = useTheme();\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filterPatients();\r\n  }, [searchQuery, patients]);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const data = await getPatients();\r\n      setPatients(data);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n    }\r\n  };\r\n\r\n  const filterPatients = () => {\r\n    const filtered = patients.filter(patient =>\r\n      patient.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    setFilteredPatients(filtered);\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\r\n      <TextInput\r\n        style={[styles.searchInput, { backgroundColor: theme.colors.card, color: theme.colors.text }]}\r\n        placeholder=\"Buscar paciente\"\r\n        placeholderTextColor={theme.colors.text}\r\n        value={searchQuery}\r\n        onChangeText={setSearchQuery}\r\n      />\r\n      <FlatList\r\n        data={filteredPatients}\r\n        renderItem={({ item }) => (\r\n          <PatientCard\r\n            patient={item}\r\n            onPress={() => navigation.navigate('PatientDetails', { patientId: item.id })}\r\n          />\r\n        )}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n      <Button\r\n        title=\"Adicionar novo paciente\"\r\n        onPress={() => navigation.navigate('AddPatient')}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  searchInput: {\r\n    height: 40,\r\n    borderRadius: 20,\r\n    paddingHorizontal: 15,\r\n    marginBottom: 15,\r\n  },\r\n});\r\n\r\nexport default PatientListScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}