{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useRoute } from '@react-navigation/native';\nimport { useTheme } from \"../hooks/useTheme\";\nimport { getPatientDetails, getPatientVitalSigns } from \"../services/api\";\nimport VitalSignsChart from \"../components/VitalSignsChart\";\nimport Button from \"../components/Button\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PatientDetailsScreen = function PatientDetailsScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    patient = _useState2[0],\n    setPatient = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    vitalSigns = _useState4[0],\n    setVitalSigns = _useState4[1];\n  var route = useRoute();\n  var patientId = route.params.patientId;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  useEffect(function () {\n    fetchPatientDetails();\n    fetchVitalSigns();\n  }, [patientId]);\n  var fetchPatientDetails = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield getPatientDetails(patientId);\n        setPatient(data);\n      } catch (error) {\n        console.error('Error fetching patient details:', error);\n        alert('Erro ao buscar detalhes do paciente');\n      }\n    });\n    return function fetchPatientDetails() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchVitalSigns = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = yield getPatientVitalSigns(patientId);\n        setVitalSigns(data);\n      } catch (error) {\n        console.error('Error fetching vital signs:', error);\n        alert('Erro ao buscar sinais vitais');\n      }\n    });\n    return function fetchVitalSigns() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (!patient) {\n    return _jsx(Text, {\n      children: \"Carregando...\"\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsx(Text, {\n      style: [styles.name, {\n        color: theme.colors.text\n      }],\n      children: patient.name\n    }), _jsxs(Text, {\n      style: [styles.info, {\n        color: theme.colors.text\n      }],\n      children: [\"Idade: \", patient.age]\n    }), _jsxs(Text, {\n      style: [styles.info, {\n        color: theme.colors.text\n      }],\n      children: [\"G\\xEAnero: \", patient.gender]\n    }), _jsxs(Text, {\n      style: [styles.info, {\n        color: theme.colors.text\n      }],\n      children: [\"Diagn\\xF3stico: \", patient.diagnosis]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.text\n        }],\n        children: \"Sinais Vitais\"\n      }), _jsx(VitalSignsChart, {\n        data: vitalSigns\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.text\n        }],\n        children: \"Medicamentos\"\n      }), patient.medications.map(function (med, index) {\n        return _jsx(Text, {\n          style: [styles.info, {\n            color: theme.colors.text\n          }],\n          children: med\n        }, index);\n      })]\n    }), _jsx(Button, {\n      title: \"Atualizar Paciente\",\n      onPress: function onPress() {}\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  info: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  section: {\n    marginVertical: 20\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  }\n});\nexport default PatientDetailsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","useRoute","useTheme","getPatientDetails","getPatientVitalSigns","VitalSignsChart","Button","jsx","_jsx","jsxs","_jsxs","PatientDetailsScreen","_useState","_useState2","_slicedToArray","patient","setPatient","_useState3","_useState4","vitalSigns","setVitalSigns","route","patientId","params","_useTheme","theme","fetchPatientDetails","fetchVitalSigns","_ref","_asyncToGenerator","data","error","console","alert","apply","arguments","_ref2","children","style","styles","container","backgroundColor","colors","background","name","color","text","info","age","gender","diagnosis","section","sectionTitle","medications","map","med","index","title","onPress","create","flex","padding","fontSize","fontWeight","marginBottom","marginVertical"],"sources":["C:/Users/carlos/Desktop/Heartbeat/heartbeatcode/src/screens/PatientDetailsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport { getPatientDetails, getPatientVitalSigns } from '../services/api';\r\nimport VitalSignsChart from '../components/VitalSignsChart';\r\nimport Button from '../components/Button';\r\n\r\nconst PatientDetailsScreen = () => {\r\n  const [patient, setPatient] = useState(null);\r\n  const [vitalSigns, setVitalSigns] = useState([]);\r\n  const route = useRoute();\r\n  const { patientId } = route.params;\r\n  const { theme } = useTheme();\r\n\r\n  useEffect(() => {\r\n    fetchPatientDetails();\r\n    fetchVitalSigns();\r\n  }, [patientId]);\r\n\r\n  const fetchPatientDetails = async () => {\r\n    try {\r\n      const data = await getPatientDetails(patientId);\r\n      setPatient(data);\r\n    } catch (error) {\r\n      console.error('Error fetching patient details:', error);\r\n      alert('Erro ao buscar detalhes do paciente');\r\n    }\r\n  };\r\n\r\n  const fetchVitalSigns = async () => {\r\n    try {\r\n      const data = await getPatientVitalSigns(patientId);\r\n      setVitalSigns(data);\r\n    } catch (error) {\r\n      console.error('Error fetching vital signs:', error);\r\n      alert('Erro ao buscar sinais vitais');\r\n    }\r\n  };\r\n\r\n  if (!patient) {\r\n    return <Text>Carregando...</Text>;\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={[styles.container, { backgroundColor: theme.colors.background }]}>\r\n      <Text style={[styles.name, { color: theme.colors.text }]}>{patient.name}</Text>\r\n      <Text style={[styles.info, { color: theme.colors.text }]}>Idade: {patient.age}</Text>\r\n      <Text style={[styles.info, { color: theme.colors.text }]}>Gênero: {patient.gender}</Text>\r\n      <Text style={[styles.info, { color: theme.colors.text }]}>Diagnóstico: {patient.diagnosis}</Text>\r\n      \r\n      <View style={styles.section}>\r\n        <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Sinais Vitais</Text>\r\n        <VitalSignsChart data={vitalSigns} />\r\n      </View>\r\n      \r\n      <View style={styles.section}>\r\n        <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Medicamentos</Text>\r\n        {patient.medications.map((med, index) => (\r\n          <Text key={index} style={[styles.info, { color: theme.colors.text }]}>{med}</Text>\r\n        ))}\r\n      </View>\r\n      \r\n      <Button title=\"Atualizar Paciente\" onPress={() => {/* Implementar atualização */}} />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  name: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  info: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n  section: {\r\n    marginVertical: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default PatientDetailsScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,QAAQ;AACjB,SAASC,iBAAiB,EAAEC,oBAAoB;AAChD,OAAOC,eAAe;AACtB,OAAOC,MAAM;AAA6B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAAC,SAAA,GAA8BjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAoCtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAMG,KAAK,GAAGpB,QAAQ,CAAC,CAAC;EACxB,IAAQqB,SAAS,GAAKD,KAAK,CAACE,MAAM,CAA1BD,SAAS;EACjB,IAAAE,SAAA,GAAkBtB,QAAQ,CAAC,CAAC;IAApBuB,KAAK,GAAAD,SAAA,CAALC,KAAK;EAEb7B,SAAS,CAAC,YAAM;IACd8B,mBAAmB,CAAC,CAAC;IACrBC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,IAAMI,mBAAmB;IAAA,IAAAE,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACtC,IAAI;QACF,IAAMC,IAAI,SAAS3B,iBAAiB,CAACmB,SAAS,CAAC;QAC/CN,UAAU,CAACc,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDE,KAAK,CAAC,qCAAqC,CAAC;MAC9C;IACF,CAAC;IAAA,gBARKP,mBAAmBA,CAAA;MAAA,OAAAE,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQxB;EAED,IAAMR,eAAe;IAAA,IAAAS,KAAA,GAAAP,iBAAA,CAAG,aAAY;MAClC,IAAI;QACF,IAAMC,IAAI,SAAS1B,oBAAoB,CAACkB,SAAS,CAAC;QAClDF,aAAa,CAACU,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDE,KAAK,CAAC,8BAA8B,CAAC;MACvC;IACF,CAAC;IAAA,gBARKN,eAAeA,CAAA;MAAA,OAAAS,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQpB;EAED,IAAI,CAACpB,OAAO,EAAE;IACZ,OAAOP,IAAA,CAACV,IAAI;MAAAuC,QAAA,EAAC;IAAa,CAAM,CAAC;EACnC;EAEA,OACE3B,KAAA,CAACV,UAAU;IAACsC,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;MAAEC,eAAe,EAAEhB,KAAK,CAACiB,MAAM,CAACC;IAAW,CAAC,CAAE;IAAAN,QAAA,GAClF7B,IAAA,CAACV,IAAI;MAACwC,KAAK,EAAE,CAACC,MAAM,CAACK,IAAI,EAAE;QAAEC,KAAK,EAAEpB,KAAK,CAACiB,MAAM,CAACI;MAAK,CAAC,CAAE;MAAAT,QAAA,EAAEtB,OAAO,CAAC6B;IAAI,CAAO,CAAC,EAC/ElC,KAAA,CAACZ,IAAI;MAACwC,KAAK,EAAE,CAACC,MAAM,CAACQ,IAAI,EAAE;QAAEF,KAAK,EAAEpB,KAAK,CAACiB,MAAM,CAACI;MAAK,CAAC,CAAE;MAAAT,QAAA,GAAC,SAAO,EAACtB,OAAO,CAACiC,GAAG;IAAA,CAAO,CAAC,EACrFtC,KAAA,CAACZ,IAAI;MAACwC,KAAK,EAAE,CAACC,MAAM,CAACQ,IAAI,EAAE;QAAEF,KAAK,EAAEpB,KAAK,CAACiB,MAAM,CAACI;MAAK,CAAC,CAAE;MAAAT,QAAA,GAAC,aAAQ,EAACtB,OAAO,CAACkC,MAAM;IAAA,CAAO,CAAC,EACzFvC,KAAA,CAACZ,IAAI;MAACwC,KAAK,EAAE,CAACC,MAAM,CAACQ,IAAI,EAAE;QAAEF,KAAK,EAAEpB,KAAK,CAACiB,MAAM,CAACI;MAAK,CAAC,CAAE;MAAAT,QAAA,GAAC,kBAAa,EAACtB,OAAO,CAACmC,SAAS;IAAA,CAAO,CAAC,EAEjGxC,KAAA,CAACb,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACY,OAAQ;MAAAd,QAAA,GAC1B7B,IAAA,CAACV,IAAI;QAACwC,KAAK,EAAE,CAACC,MAAM,CAACa,YAAY,EAAE;UAAEP,KAAK,EAAEpB,KAAK,CAACiB,MAAM,CAACI;QAAK,CAAC,CAAE;QAAAT,QAAA,EAAC;MAAa,CAAM,CAAC,EACtF7B,IAAA,CAACH,eAAe;QAACyB,IAAI,EAAEX;MAAW,CAAE,CAAC;IAAA,CACjC,CAAC,EAEPT,KAAA,CAACb,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACY,OAAQ;MAAAd,QAAA,GAC1B7B,IAAA,CAACV,IAAI;QAACwC,KAAK,EAAE,CAACC,MAAM,CAACa,YAAY,EAAE;UAAEP,KAAK,EAAEpB,KAAK,CAACiB,MAAM,CAACI;QAAK,CAAC,CAAE;QAAAT,QAAA,EAAC;MAAY,CAAM,CAAC,EACpFtB,OAAO,CAACsC,WAAW,CAACC,GAAG,CAAC,UAACC,GAAG,EAAEC,KAAK;QAAA,OAClChD,IAAA,CAACV,IAAI;UAAawC,KAAK,EAAE,CAACC,MAAM,CAACQ,IAAI,EAAE;YAAEF,KAAK,EAAEpB,KAAK,CAACiB,MAAM,CAACI;UAAK,CAAC,CAAE;UAAAT,QAAA,EAAEkB;QAAG,GAA/DC,KAAsE,CAAC;MAAA,CACnF,CAAC;IAAA,CACE,CAAC,EAEPhD,IAAA,CAACF,MAAM;MAACmD,KAAK,EAAC,oBAAoB;MAACC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ,CAA8B;IAAE,CAAE,CAAC;EAAA,CAC3E,CAAC;AAEjB,CAAC;AAED,IAAMnB,MAAM,GAAGxC,UAAU,CAAC4D,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDjB,IAAI,EAAE;IACJkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDjB,IAAI,EAAE;IACJe,QAAQ,EAAE,EAAE;IACZE,YAAY,EAAE;EAChB,CAAC;EACDb,OAAO,EAAE;IACPc,cAAc,EAAE;EAClB,CAAC;EACDb,YAAY,EAAE;IACZU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAerD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}