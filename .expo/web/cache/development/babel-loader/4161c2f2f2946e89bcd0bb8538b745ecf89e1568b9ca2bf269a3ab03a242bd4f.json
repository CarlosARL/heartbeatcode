{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useTheme } from \"../hooks/useTheme\";\nimport Button from \"./Button\";\nimport { getMedicalNotes, addMedicalNote } from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MedicalNotes = function MedicalNotes(_ref) {\n  var patientId = _ref.patientId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    notes = _useState2[0],\n    setNotes = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newNote = _useState4[0],\n    setNewNote = _useState4[1];\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  useEffect(function () {\n    fetchMedicalNotes();\n  }, []);\n  var fetchMedicalNotes = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = yield getMedicalNotes(patientId);\n        setNotes(data);\n      } catch (error) {\n        console.error('Error fetching medical notes:', error);\n      }\n    });\n    return function fetchMedicalNotes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleAddNote = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (newNote.trim() === '') return;\n      try {\n        var addedNote = yield addMedicalNote(patientId, newNote);\n        setNotes([addedNote].concat(_toConsumableArray(notes)));\n        setNewNote('');\n      } catch (error) {\n        console.error('Error adding medical note:', error);\n      }\n    });\n    return function handleAddNote() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderNoteItem = function renderNoteItem(_ref4) {\n    var item = _ref4.item;\n    return _jsxs(View, {\n      style: [styles.noteItem, {\n        backgroundColor: theme.colors.card\n      }],\n      children: [_jsx(Text, {\n        style: [styles.noteText, {\n          color: theme.colors.text\n        }],\n        children: item.content\n      }), _jsx(Text, {\n        style: [styles.noteDate, {\n          color: theme.colors.text\n        }],\n        children: new Date(item.createdAt).toLocaleString()\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: [styles.title, {\n        color: theme.colors.text\n      }],\n      children: \"Notas M\\xE9dicas\"\n    }), _jsxs(View, {\n      style: styles.addNoteContainer,\n      children: [_jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: theme.colors.card,\n          color: theme.colors.text\n        }],\n        placeholder: \"Adicionar nova nota\",\n        placeholderTextColor: theme.colors.text,\n        value: newNote,\n        onChangeText: setNewNote,\n        multiline: true\n      }), _jsx(Button, {\n        title: \"Adicionar\",\n        onPress: handleAddNote\n      })]\n    }), _jsx(FlatList, {\n      data: notes,\n      renderItem: renderNoteItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  addNoteContainer: {\n    marginBottom: 15\n  },\n  input: {\n    height: 80,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  noteItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  noteText: {\n    fontSize: 16\n  },\n  noteDate: {\n    fontSize: 12,\n    marginTop: 5\n  }\n});\nexport default MedicalNotes;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","StyleSheet","FlatList","useTheme","Button","getMedicalNotes","addMedicalNote","jsx","_jsx","jsxs","_jsxs","MedicalNotes","_ref","patientId","_useState","_useState2","_slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useTheme","theme","fetchMedicalNotes","_ref2","_asyncToGenerator","data","error","console","apply","arguments","handleAddNote","_ref3","trim","addedNote","concat","_toConsumableArray","renderNoteItem","_ref4","item","style","styles","noteItem","backgroundColor","colors","card","children","noteText","color","text","content","noteDate","Date","createdAt","toLocaleString","container","title","addNoteContainer","input","placeholder","placeholderTextColor","value","onChangeText","multiline","onPress","renderItem","keyExtractor","id","toString","create","marginTop","fontSize","fontWeight","marginBottom","height","borderRadius","padding"],"sources":["C:/Users/carlos/Desktop/Heartbeat/heartbeatcode/src/components/MedicalNotes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, FlatList } from 'react-native';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport Button from './Button';\r\nimport { getMedicalNotes, addMedicalNote } from '../services/api';\r\n\r\nconst MedicalNotes = ({ patientId }) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const { theme } = useTheme();\r\n\r\n  useEffect(() => {\r\n    fetchMedicalNotes();\r\n  }, []);\r\n\r\n  const fetchMedicalNotes = async () => {\r\n    try {\r\n      const data = await getMedicalNotes(patientId);\r\n      setNotes(data);\r\n    } catch (error) {\r\n      console.error('Error fetching medical notes:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddNote = async () => {\r\n    if (newNote.trim() === '') return;\r\n\r\n    try {\r\n      const addedNote = await addMedicalNote(patientId, newNote);\r\n      setNotes([addedNote, ...notes]);\r\n      setNewNote('');\r\n    } catch (error) {\r\n      console.error('Error adding medical note:', error);\r\n    }\r\n  };\r\n\r\n  const renderNoteItem = ({ item }) => (\r\n    <View style={[styles.noteItem, { backgroundColor: theme.colors.card }]}>\r\n      <Text style={[styles.noteText, { color: theme.colors.text }]}>{item.content}</Text>\r\n      <Text style={[styles.noteDate, { color: theme.colors.text }]}>{new Date(item.createdAt).toLocaleString()}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={[styles.title, { color: theme.colors.text }]}>Notas MÃ©dicas</Text>\r\n      <View style={styles.addNoteContainer}>\r\n        <TextInput\r\n          style={[styles.input, { backgroundColor: theme.colors.card, color: theme.colors.text }]}\r\n          placeholder=\"Adicionar nova nota\"\r\n          placeholderTextColor={theme.colors.text}\r\n          value={newNote}\r\n          onChangeText={setNewNote}\r\n          multiline\r\n        />\r\n        <Button title=\"Adicionar\" onPress={handleAddNote} />\r\n      </View>\r\n      <FlatList\r\n        data={notes}\r\n        renderItem={renderNoteItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  addNoteContainer: {\r\n    marginBottom: 15,\r\n  },\r\n  input: {\r\n    height: 80,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  noteItem: {\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  noteText: {\r\n    fontSize: 16,\r\n  },\r\n  noteDate: {\r\n    fontSize: 12,\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default MedicalNotes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}