{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { useTheme } from \"../hooks/useTheme\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport Button from \"../components/Button\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme,\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme;\n  var _useAuth = useAuth(),\n    signOut = _useAuth.signOut,\n    user = _useAuth.user;\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsx(Text, {\n      style: [styles.title, {\n        color: theme.colors.text\n      }],\n      children: \"Configura\\xE7\\xF5es\"\n    }), _jsxs(View, {\n      style: styles.setting,\n      children: [_jsx(Text, {\n        style: [styles.settingText, {\n          color: theme.colors.text\n        }],\n        children: \"Modo Escuro\"\n      }), _jsx(Switch, {\n        value: isDarkMode,\n        onValueChange: toggleTheme,\n        trackColor: {\n          false: \"#767577\",\n          true: theme.colors.primary\n        },\n        thumbColor: isDarkMode ? theme.colors.background : \"#f4f3f4\"\n      })]\n    }), _jsxs(View, {\n      style: styles.userInfo,\n      children: [_jsxs(Text, {\n        style: [styles.userInfoText, {\n          color: theme.colors.text\n        }],\n        children: [\"Usu\\xE1rio: \", user.name]\n      }), _jsxs(Text, {\n        style: [styles.userInfoText, {\n          color: theme.colors.text\n        }],\n        children: [\"E-mail: \", user.email]\n      })]\n    }), _jsx(Button, {\n      title: \"Sair\",\n      onPress: signOut,\n      type: \"secondary\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  setting: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  settingText: {\n    fontSize: 18\n  },\n  userInfo: {\n    marginBottom: 20\n  },\n  userInfoText: {\n    fontSize: 16,\n    marginBottom: 5\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","Switch","useTheme","useAuth","Button","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useTheme","theme","isDarkMode","toggleTheme","_useAuth","signOut","user","style","styles","container","backgroundColor","colors","background","children","title","color","text","setting","settingText","value","onValueChange","trackColor","false","true","primary","thumbColor","userInfo","userInfoText","name","email","onPress","type","create","flex","padding","fontSize","fontWeight","marginBottom","flexDirection","justifyContent","alignItems"],"sources":["C:/Users/carlos/Desktop/Heartbeat/heartbeatcode/src/screens/SettingsScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Switch } from 'react-native';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport Button from '../components/Button';\r\n\r\nconst SettingsScreen = () => {\r\n  const { theme, isDarkMode, toggleTheme } = useTheme();\r\n  const { signOut, user } = useAuth();\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\r\n      <Text style={[styles.title, { color: theme.colors.text }]}>Configurações</Text>\r\n      \r\n      <View style={styles.setting}>\r\n        <Text style={[styles.settingText, { color: theme.colors.text }]}>Modo Escuro</Text>\r\n        <Switch\r\n          value={isDarkMode}\r\n          onValueChange={toggleTheme}\r\n          trackColor={{ false: \"#767577\", true: theme.colors.primary }}\r\n          thumbColor={isDarkMode ? theme.colors.background : \"#f4f3f4\"}\r\n        />\r\n      </View>\r\n      \r\n      <View style={styles.userInfo}>\r\n        <Text style={[styles.userInfoText, { color: theme.colors.text }]}>\r\n          Usuário: {user.name}\r\n        </Text>\r\n        <Text style={[styles.userInfoText, { color: theme.colors.text }]}>\r\n          E-mail: {user.email}\r\n        </Text>\r\n      </View>\r\n      \r\n      <Button title=\"Sair\" onPress={signOut} type=\"secondary\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  setting: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  settingText: {\r\n    fontSize: 18,\r\n  },\r\n  userInfo: {\r\n    marginBottom: 20,\r\n  },\r\n  userInfoText: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n});\r\n\r\nexport default SettingsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}