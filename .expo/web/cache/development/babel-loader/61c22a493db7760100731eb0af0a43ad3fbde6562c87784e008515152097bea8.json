{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useRoute } from '@react-navigation/native';\nimport { useTheme } from \"../hooks/useTheme\";\nimport VitalSignsChart from \"../components/VitalSignsChart\";\nimport AlertModal from \"../components/AlertModal\";\nimport Button from \"../components/Button\";\nimport { getPatientDetails, getPatientVitalSigns } from \"../services/api\";\nimport MedicalNotes from \"../components/MedicalNotes\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PatientDetailsScreen = function PatientDetailsScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    patient = _useState2[0],\n    setPatient = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    vitalSigns = _useState4[0],\n    setVitalSigns = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showAlert = _useState6[0],\n    setShowAlert = _useState6[1];\n  var route = useRoute();\n  var patientId = route.params.patientId;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  useEffect(function () {\n    fetchPatientDetails();\n    fetchVitalSigns();\n  }, []);\n  var fetchPatientDetails = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield getPatientDetails(patientId);\n        setPatient(data);\n      } catch (error) {\n        console.error('Error fetching patient details:', error);\n      }\n    });\n    return function fetchPatientDetails() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchVitalSigns = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = yield getPatientVitalSigns(patientId);\n        setVitalSigns(data);\n      } catch (error) {\n        console.error('Error fetching vital signs:', error);\n      }\n    });\n    return function fetchVitalSigns() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (!patient) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsx(Text, {\n      style: [styles.name, {\n        color: theme.colors.text\n      }],\n      children: patient.name\n    }), _jsxs(Text, {\n      style: [styles.info, {\n        color: theme.colors.text\n      }],\n      children: [\"Idade: \", patient.age]\n    }), _jsxs(Text, {\n      style: [styles.info, {\n        color: theme.colors.text\n      }],\n      children: [\"G\\xEAnero: \", patient.gender]\n    }), _jsx(View, {\n      style: styles.section,\n      children: _jsx(MedicalNotes, {\n        patientId: patientId\n      })\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.text\n        }],\n        children: \"Sinais Vitais\"\n      }), _jsx(VitalSignsChart, {\n        data: vitalSigns\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.text\n        }],\n        children: \"Informa\\xE7\\xF5es M\\xE9dicas\"\n      }), _jsxs(Text, {\n        style: [styles.info, {\n          color: theme.colors.text\n        }],\n        children: [\"Diagn\\xF3stico: \", patient.diagnosis]\n      }), _jsxs(Text, {\n        style: [styles.info, {\n          color: theme.colors.text\n        }],\n        children: [\"Medicamentos: \", patient.medications.join(', ')]\n      })]\n    }), _jsx(Button, {\n      title: \"Configurar Alertas\",\n      onPress: function onPress() {\n        return setShowAlert(true);\n      }\n    }), _jsx(AlertModal, {\n      visible: showAlert,\n      onClose: function onClose() {\n        return setShowAlert(false);\n      },\n      patientId: patientId\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  info: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  section: {\n    marginVertical: 20\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  }\n});\nexport default PatientDetailsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","useRoute","useTheme","VitalSignsChart","AlertModal","Button","getPatientDetails","getPatientVitalSigns","MedicalNotes","jsx","_jsx","jsxs","_jsxs","PatientDetailsScreen","_useState","_useState2","_slicedToArray","patient","setPatient","_useState3","_useState4","vitalSigns","setVitalSigns","_useState5","_useState6","showAlert","setShowAlert","route","patientId","params","_useTheme","theme","fetchPatientDetails","fetchVitalSigns","_ref","_asyncToGenerator","data","error","console","apply","arguments","_ref2","children","style","styles","container","backgroundColor","colors","background","name","color","text","info","age","gender","section","sectionTitle","diagnosis","medications","join","title","onPress","visible","onClose","create","flex","padding","fontSize","fontWeight","marginBottom","marginVertical"],"sources":["C:/Users/carlos/Desktop/Heartbeat/heartbeatcode/src/screens/PatientDetailsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { useTheme } from '../hooks/useTheme';\r\nimport VitalSignsChart from '../components/VitalSignsChart';\r\nimport AlertModal from '../components/AlertModal';\r\nimport Button from '../components/Button';\r\nimport { getPatientDetails, getPatientVitalSigns } from '../services/api';\r\nimport MedicalNotes from '../components/MedicalNotes';\r\n\r\nconst PatientDetailsScreen = () => {\r\n  const [patient, setPatient] = useState(null);\r\n  const [vitalSigns, setVitalSigns] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const route = useRoute();\r\n  const { patientId } = route.params;\r\n  const { theme } = useTheme();\r\n\r\n  useEffect(() => {\r\n    fetchPatientDetails();\r\n    fetchVitalSigns();\r\n  }, []);\r\n\r\n  const fetchPatientDetails = async () => {\r\n    try {\r\n      const data = await getPatientDetails(patientId);\r\n      setPatient(data);\r\n    } catch (error) {\r\n      console.error('Error fetching patient details:', error);\r\n    }\r\n  };\r\n\r\n  const fetchVitalSigns = async () => {\r\n    try {\r\n      const data = await getPatientVitalSigns(patientId);\r\n      setVitalSigns(data);\r\n    } catch (error) {\r\n      console.error('Error fetching vital signs:', error);\r\n    }\r\n  };\r\n\r\n  if (!patient) {\r\n    return <Text>Loading...</Text>;\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={[styles.container, { backgroundColor: theme.colors.background }]}>\r\n      <Text style={[styles.name, { color: theme.colors.text }]}>{patient.name}</Text>\r\n      <Text style={[styles.info, { color: theme.colors.text }]}>Idade: {patient.age}</Text>\r\n      <Text style={[styles.info, { color: theme.colors.text }]}>Gênero: {patient.gender}</Text>\r\n      <View style={styles.section}>\r\n        <MedicalNotes patientId={patientId} />\r\n      </View>\r\n      <View style={styles.section}>\r\n        <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Sinais Vitais</Text>\r\n        <VitalSignsChart data={vitalSigns} />\r\n      </View>\r\n      \r\n      <View style={styles.section}>\r\n        <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Informações Médicas</Text>\r\n        <Text style={[styles.info, { color: theme.colors.text }]}>Diagnóstico: {patient.diagnosis}</Text>\r\n        <Text style={[styles.info, { color: theme.colors.text }]}>Medicamentos: {patient.medications.join(', ')}</Text>\r\n      </View>\r\n      \r\n      \r\n      <Button title=\"Configurar Alertas\" onPress={() => setShowAlert(true)} />\r\n      \r\n      <AlertModal\r\n        visible={showAlert}\r\n        onClose={() => setShowAlert(false)}\r\n        patientId={patientId}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  name: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  info: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n  section: {\r\n    marginVertical: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default PatientDetailsScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,QAAQ;AACjB,OAAOC,eAAe;AACtB,OAAOC,UAAU;AACjB,OAAOC,MAAM;AACb,SAASC,iBAAiB,EAAEC,oBAAoB;AAChD,OAAOC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAAC,SAAA,GAA8BnB,QAAQ,CAAC,IAAI,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAoCxB,QAAQ,CAAC,EAAE,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAkC5B,QAAQ,CAAC,KAAK,CAAC;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAMG,KAAK,GAAG1B,QAAQ,CAAC,CAAC;EACxB,IAAQ2B,SAAS,GAAKD,KAAK,CAACE,MAAM,CAA1BD,SAAS;EACjB,IAAAE,SAAA,GAAkB5B,QAAQ,CAAC,CAAC;IAApB6B,KAAK,GAAAD,SAAA,CAALC,KAAK;EAEbnC,SAAS,CAAC,YAAM;IACdoC,mBAAmB,CAAC,CAAC;IACrBC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMD,mBAAmB;IAAA,IAAAE,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACtC,IAAI;QACF,IAAMC,IAAI,SAAS9B,iBAAiB,CAACsB,SAAS,CAAC;QAC/CV,UAAU,CAACkB,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAAA,gBAPKL,mBAAmBA,CAAA;MAAA,OAAAE,IAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOxB;EAED,IAAMP,eAAe;IAAA,IAAAQ,KAAA,GAAAN,iBAAA,CAAG,aAAY;MAClC,IAAI;QACF,IAAMC,IAAI,SAAS7B,oBAAoB,CAACqB,SAAS,CAAC;QAClDN,aAAa,CAACc,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAAA,gBAPKJ,eAAeA,CAAA;MAAA,OAAAQ,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOpB;EAED,IAAI,CAACvB,OAAO,EAAE;IACZ,OAAOP,IAAA,CAACZ,IAAI;MAAA4C,QAAA,EAAC;IAAU,CAAM,CAAC;EAChC;EAEA,OACE9B,KAAA,CAACZ,UAAU;IAAC2C,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;MAAEC,eAAe,EAAEf,KAAK,CAACgB,MAAM,CAACC;IAAW,CAAC,CAAE;IAAAN,QAAA,GAClFhC,IAAA,CAACZ,IAAI;MAAC6C,KAAK,EAAE,CAACC,MAAM,CAACK,IAAI,EAAE;QAAEC,KAAK,EAAEnB,KAAK,CAACgB,MAAM,CAACI;MAAK,CAAC,CAAE;MAAAT,QAAA,EAAEzB,OAAO,CAACgC;IAAI,CAAO,CAAC,EAC/ErC,KAAA,CAACd,IAAI;MAAC6C,KAAK,EAAE,CAACC,MAAM,CAACQ,IAAI,EAAE;QAAEF,KAAK,EAAEnB,KAAK,CAACgB,MAAM,CAACI;MAAK,CAAC,CAAE;MAAAT,QAAA,GAAC,SAAO,EAACzB,OAAO,CAACoC,GAAG;IAAA,CAAO,CAAC,EACrFzC,KAAA,CAACd,IAAI;MAAC6C,KAAK,EAAE,CAACC,MAAM,CAACQ,IAAI,EAAE;QAAEF,KAAK,EAAEnB,KAAK,CAACgB,MAAM,CAACI;MAAK,CAAC,CAAE;MAAAT,QAAA,GAAC,aAAQ,EAACzB,OAAO,CAACqC,MAAM;IAAA,CAAO,CAAC,EACzF5C,IAAA,CAACb,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAACW,OAAQ;MAAAb,QAAA,EAC1BhC,IAAA,CAACF,YAAY;QAACoB,SAAS,EAAEA;MAAU,CAAE;IAAC,CAClC,CAAC,EACPhB,KAAA,CAACf,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAACW,OAAQ;MAAAb,QAAA,GAC1BhC,IAAA,CAACZ,IAAI;QAAC6C,KAAK,EAAE,CAACC,MAAM,CAACY,YAAY,EAAE;UAAEN,KAAK,EAAEnB,KAAK,CAACgB,MAAM,CAACI;QAAK,CAAC,CAAE;QAAAT,QAAA,EAAC;MAAa,CAAM,CAAC,EACtFhC,IAAA,CAACP,eAAe;QAACiC,IAAI,EAAEf;MAAW,CAAE,CAAC;IAAA,CACjC,CAAC,EAEPT,KAAA,CAACf,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAACW,OAAQ;MAAAb,QAAA,GAC1BhC,IAAA,CAACZ,IAAI;QAAC6C,KAAK,EAAE,CAACC,MAAM,CAACY,YAAY,EAAE;UAAEN,KAAK,EAAEnB,KAAK,CAACgB,MAAM,CAACI;QAAK,CAAC,CAAE;QAAAT,QAAA,EAAC;MAAmB,CAAM,CAAC,EAC5F9B,KAAA,CAACd,IAAI;QAAC6C,KAAK,EAAE,CAACC,MAAM,CAACQ,IAAI,EAAE;UAAEF,KAAK,EAAEnB,KAAK,CAACgB,MAAM,CAACI;QAAK,CAAC,CAAE;QAAAT,QAAA,GAAC,kBAAa,EAACzB,OAAO,CAACwC,SAAS;MAAA,CAAO,CAAC,EACjG7C,KAAA,CAACd,IAAI;QAAC6C,KAAK,EAAE,CAACC,MAAM,CAACQ,IAAI,EAAE;UAAEF,KAAK,EAAEnB,KAAK,CAACgB,MAAM,CAACI;QAAK,CAAC,CAAE;QAAAT,QAAA,GAAC,gBAAc,EAACzB,OAAO,CAACyC,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;MAAA,CAAO,CAAC;IAAA,CAC3G,CAAC,EAGPjD,IAAA,CAACL,MAAM;MAACuD,KAAK,EAAC,oBAAoB;MAACC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQnC,YAAY,CAAC,IAAI,CAAC;MAAA;IAAC,CAAE,CAAC,EAExEhB,IAAA,CAACN,UAAU;MACT0D,OAAO,EAAErC,SAAU;MACnBsC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQrC,YAAY,CAAC,KAAK,CAAC;MAAA,CAAC;MACnCE,SAAS,EAAEA;IAAU,CACtB,CAAC;EAAA,CACQ,CAAC;AAEjB,CAAC;AAED,IAAMgB,MAAM,GAAG7C,UAAU,CAACiE,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDjB,IAAI,EAAE;IACJkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDjB,IAAI,EAAE;IACJe,QAAQ,EAAE,EAAE;IACZE,YAAY,EAAE;EAChB,CAAC;EACDd,OAAO,EAAE;IACPe,cAAc,EAAE;EAClB,CAAC;EACDd,YAAY,EAAE;IACZW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAexD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}